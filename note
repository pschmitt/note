#!/usr/bin/env zsh

# config section
[[ -f ${XDG_CONFIG_HOME:-~/.config}/user-dirs.dirs ]] && source ${XDG_CONFIG_HOME:-~/.config}/user-dirs.dirs
NOTES_DIR="${XDG_DOCUMENTS_DIR-${HOME}/Documents}/notes"
NOTES_FILE="$NOTES_DIR/NOTES"
TODO_FILE="$NOTES_DIR/TODO"
TOWATCH_FILE="$NOTES_DIR/TOWATCH"
IDEAS_FILE="$NOTES_DIR/IDEAS"

fn=$NOTES_FILE

usage() {
    echo "usage: $1 [-e] [-i|t|w]"
    echo "  -e: edit with $EDITOR"
    echo "  -i: use IDEAS file"
    echo "  -t: use TODO file"
    echo "  -w: use TOWATCH file"
    echo "  -h: print this help"
}

show_note() {
    fn=$1
    [[ -f $fn ]] || return 1
    [[ -z $EDIT ]] && cat $fn || $EDITOR $fn
    return 0
}

write_note() {
    [[ -d $NOTES_DIR ]] || mkdir -p $NOTES_DIR
    fn=$1
    shift
    [[ -f $fn ]] || touch $fn
    echo -- $@ >> $fn
    return 0
}

# no param ? -> print file !
[[ $# -eq 0 ]] && CAT=1

while getopts "ekhitw" opt; do
    case $opt in
        e)
            # edit
            EDIT=1
            ;;
        k)
            # echo "-k triggered"
            DEL=1
            ;;
        h)
            usage $(basename $0)
            return 0
            ;;
        i)
            # echo "-i was triggered, Parameter: $OPTARG" >&2
            fn=$IDEAS_FILE
            ;;
        t)
            # echo "-t triggered"
            fn=$TODO_FILE
            ;;
        w)
            # echo "-w triggered"
            fn=$TOWATCH_FILE
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
    esac
done

shift $(($OPTIND - 1))

test $DEL && (rm -i $fn; return 0)

if test -z "$*";then
    if test -n $CAT;then
        show_note $fn
    fi
else
    write_note $fn $@
fi

#[[ -z $* ]] && ([[ -n $CAT ]] && show_note $fn) || write_note $fn $@

return 0
